"use strict";(self.webpackChunknodegui=self.webpackChunknodegui||[]).push([[3209],{47886:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=r(74848),o=r(28453);const i={id:"parsingmode",title:"ParsingMode",sidebar_label:"ParsingMode"},d=void 0,s={id:"api/generated/enums/parsingmode",title:"ParsingMode",description:"Index",source:"@site/docs/api/generated/enums/parsingmode.md",sourceDirName:"api/generated/enums",slug:"/api/generated/enums/parsingmode",permalink:"/docs/api/generated/enums/parsingmode",draft:!1,unlisted:!1,editUrl:"https://github.com/nodegui/nodegui/edit/master/website/docs/api/generated/enums/parsingmode.md",tags:[],version:"current",frontMatter:{id:"parsingmode",title:"ParsingMode",sidebar_label:"ParsingMode"},sidebar:"api",previous:{title:"Orientation",permalink:"/docs/api/generated/enums/orientation"},next:{title:"PenCapStyle",permalink:"/docs/api/generated/enums/pencapstyle"}},a={},l=[{value:"Index",id:"index",level:2},{value:"Enumeration members",id:"enumeration-members",level:3},{value:"Enumeration members",id:"enumeration-members-1",level:2},{value:"DecodedMode",id:"decodedmode",level:3},{value:"StrictMode",id:"strictmode",level:3},{value:"TolerantMode",id:"tolerantmode",level:3}];function c(e){const n={a:"a",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"index",children:"Index"}),"\n",(0,t.jsx)(n.h3,{id:"enumeration-members",children:"Enumeration members"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/api/generated/enums/parsingmode#decodedmode",children:"DecodedMode"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/api/generated/enums/parsingmode#strictmode",children:"StrictMode"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/api/generated/enums/parsingmode#tolerantmode",children:"TolerantMode"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"enumeration-members-1",children:"Enumeration members"}),"\n",(0,t.jsx)(n.h3,{id:"decodedmode",children:"DecodedMode"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"DecodedMode"}),": = 2"]}),"\n",(0,t.jsx)(n.p,{children:"QUrl will interpret the URL component in the fully-decoded form, where percent characters stand for themselves, not as the beginning of a percent-encoded sequence. This mode is only valid for the setters setting components of a URL; it is not permitted in the QUrl constructor, in fromEncoded() or in setUrl(). For more information on this mode, see the documentation for QUrl::FullyDecoded."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"strictmode",children:"StrictMode"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"StrictMode"}),": = 1"]}),"\n",(0,t.jsx)(n.p,{children:"Only valid URLs are accepted. This mode is useful for general URL validation."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"tolerantmode",children:"TolerantMode"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"TolerantMode"}),": = 0"]}),"\n",(0,t.jsx)(n.p,{children:"QUrl will try to correct some common errors in URLs. This mode is useful for parsing URLs coming from sources not known to be strictly standards-conforming."})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>s});var t=r(96540);const o={},i=t.createContext(o);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);