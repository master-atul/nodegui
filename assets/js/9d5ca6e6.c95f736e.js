"use strict";(self.webpackChunknodegui=self.webpackChunknodegui||[]).push([[4988],{38679:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var i=t(74848),s=t(28453);const o={id:"userinputresolutionoption",title:"UserInputResolutionOption",sidebar_label:"UserInputResolutionOption"},r=void 0,l={id:"api/generated/enums/userinputresolutionoption",title:"UserInputResolutionOption",description:"Index",source:"@site/docs/api/generated/enums/userinputresolutionoption.md",sourceDirName:"api/generated/enums",slug:"/api/generated/enums/userinputresolutionoption",permalink:"/docs/api/generated/enums/userinputresolutionoption",draft:!1,unlisted:!1,editUrl:"https://github.com/nodegui/nodegui/edit/master/website/docs/api/generated/enums/userinputresolutionoption.md",tags:[],version:"current",frontMatter:{id:"userinputresolutionoption",title:"UserInputResolutionOption",sidebar_label:"UserInputResolutionOption"},sidebar:"api",previous:{title:"UrlFormattingOption",permalink:"/docs/api/generated/enums/urlformattingoption"},next:{title:"VerticalHeaderFormat",permalink:"/docs/api/generated/enums/verticalheaderformat"}},u={},a=[{value:"Index",id:"index",level:2},{value:"Enumeration members",id:"enumeration-members",level:3},{value:"Enumeration members",id:"enumeration-members-1",level:2},{value:"AssumeLocalFile",id:"assumelocalfile",level:3},{value:"DefaultResolution",id:"defaultresolution",level:3}];function d(e){const n={a:"a",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"index",children:"Index"}),"\n",(0,i.jsx)(n.h3,{id:"enumeration-members",children:"Enumeration members"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/api/generated/enums/userinputresolutionoption#assumelocalfile",children:"AssumeLocalFile"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/api/generated/enums/userinputresolutionoption#defaultresolution",children:"DefaultResolution"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"enumeration-members-1",children:"Enumeration members"}),"\n",(0,i.jsx)(n.h3,{id:"assumelocalfile",children:"AssumeLocalFile"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"AssumeLocalFile"}),": = 1"]}),"\n",(0,i.jsxs)(n.p,{children:["This option makes fromUserInput() always return a local path unless the input contains a scheme, such as ",(0,i.jsx)(n.a,{href:"http://file.pl",children:"http://file.pl"}),". This is useful for applications such as text editors, which are able to create the file if it doesn't exist."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"defaultresolution",children:"DefaultResolution"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"DefaultResolution"}),": = 0"]}),"\n",(0,i.jsx)(n.p,{children:"The default resolution mechanism is to check whether a local file exists, in the working directory given to fromUserInput, and only return a local path in that case. Otherwise a URL is assumed."})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);